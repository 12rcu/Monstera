package com.lop.devtools.monstera.files.res.materials

data class Material(var name: String) {
    companion object {
        val ALPHA_BLOCK: Material = Material("alpha_block")
        val ALPHA_BLOCK_COLOR: Material = Material("alpha_block_color")
        val BANNER: Material = Material("banner")
        val BANNER_POLE: Material = Material("banner_pole")
        val BEACON_BEAM: Material = Material("beacon_beam")
        val BEACON_BEAM_TRANSPARENT: Material = Material("beacon_beam_transparent")
        val CHARGED_CREEPER: Material = Material("charged_creeper")
        val CONDUIT_WIND: Material = Material("conduit_wind")
        val ENTITY: Material = Material("entity")
        val ENTITY_ALPHABLEND: Material = Material("entity_alphablend")
        val ENTITY_ALPHABLEND_NOCOLORENTITY_STATIC: Material = Material("entity_alphablend_nocolorentity_static")
        val ENTITY_ALPHATEST: Material = Material("entity_alphatest")
        val ENTITY_ALPHATEST_CHANGE_COLOR: Material = Material("entity_alphatest_change_color")
        val ENTITY_ALPHATEST_CHANGE_COLOR_GLINT: Material = Material("entity_alphatest_change_color_glint")
        val ENTITY_ALPHATEST_GLINT: Material = Material("entity_alphatest_glint")
        val ENTITY_ALPHATEST_GLINT_ITEM: Material = Material("entity_alphatest_glint_item")
        val ENTITY_ALPHATEST_MULTICOLOR_TINT: Material = Material("entity_alphatest_multicolor_tint")
        val ENTITY_BEAM: Material = Material("entity_beam")
        val ENTITY_BEAM_ADDITIVE: Material = Material("entity_beam_additive")
        val ENTITY_CHANGE_COLOR: Material = Material("entity_change_color")
        val ENTITY_CHANGE_COLOR_GLINT: Material = Material("entity_change_color_glint")
        val ENTITY_CUSTOM: Material = Material("entity_custom")
        val ENTITY_DISSOLVE_LAYER0: Material = Material("entity_dissolve_layer0")
        val ENTITY_DISSOLVE_LAYER1: Material = Material("entity_dissolve_layer1")
        val ENTITY_EMISSIVE: Material = Material("entity_emissive")
        val ENTITY_EMISSIVE_ALPHA: Material = Material("entity_emissive_alpha")
        val ENTITY_EMISSIVE_ALPHA_ONE_SIDED: Material = Material("entity_emissive_alpha_one_sided")
        val ENTITY_FLAT_COLOR_LINE: Material = Material("entity_flat_color_line")
        val ENTITY_GLINT: Material = Material("entity_glint")
        val ENTITY_LEAD_BASE: Material = Material("entity_lead_base")
        val ENTITY_LOYALTY_ROPE: Material = Material("entity_loyalty_rope")
        val ENTITY_MULTITEXTURE: Material = Material("entity_multitexture")
        val ENTITY_MULTITEXTURE_ALPHA_TEST: Material = Material("entity_multitexture_alpha_test")
        val ENTITY_MULTITEXTURE_ALPHA_TEST_COLOR_MASK: Material = Material("entity_multitexture_alpha_test_color_mask")
        val ENTITY_MULTITEXTURE_COLOR_MASK: Material = Material("entity_multitexture_color_mask")
        val ENTITY_MULTITEXTURE_MASKED: Material = Material("entity_multitexture_masked")
        val ENTITY_MULTITEXTURE_MULTIPLICATIVE_BLEND: Material = Material("entity_multitexture_multiplicative_blend")
        val ENTITY_NOCULL: Material = Material("entity_nocull")
        val GUARDIAN_GHOST: Material = Material("guardian_ghost")
        val ITEM_IN_HAND: Material = Material("item_in_hand")
        val ITEM_IN_HAND_ENTITY_ALPHATEST: Material = Material("item_in_hand_entity_alphatest")
        val ITEM_IN_HAND_ENTITY_ALPHATEST_COLOR: Material = Material("item_in_hand_entity_alphatest_color")
        val ITEM_IN_HAND_GLINT: Material = Material("item_in_hand_glint")
        val ITEM_IN_HAND_MULTICOLOR_TINT: Material = Material("item_in_hand_multicolor_tint")
        val MAP: Material = Material("map")
        val MAP_DECORATION: Material = Material("map_decoration")
        val MAP_MARKER: Material = Material("map_marker")
        val MOVING_BLOCK: Material = Material("moving_block")
        val MOVING_BLOCK_ALPHA: Material = Material("moving_block_alpha")
        val MOVING_BLOCK_ALPHA_SEASONS: Material = Material("moving_block_alpha_seasons")
        val MOVING_BLOCK_ALPHA_SINGLE_SIDE: Material = Material("moving_block_alpha_single_side")
        val MOVING_BLOCK_BLEND: Material = Material("moving_block_blend")
        val MOVING_BLOCK_DOUBLE_SIDE: Material = Material("moving_block_double_side")
        val MOVING_BLOCK_SEASONS: Material = Material("moving_block_seasons")
        val OPAQUE_BLOCK: Material = Material("opaque_block")
        val OPAQUE_BLOCK_COLOR: Material = Material("opaque_block_color")
        val OPAQUE_BLOCK_COLOR_UV2: Material = Material("opaque_block_color_uv2")
    }
}